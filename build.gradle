plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
}

group 'gcg.dent'
version '0.3.1'

repositories {
    mavenCentral()
}

configurations {
    developmentOnly
}

dependencies {
    // Micronaut
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation 'io.micronaut:micronaut-spring:2.0.1'

    //View & templates
    compile 'io.micronaut:micronaut-views:1.3.2'
    compile 'com.github.jknack:handlebars:4.1.0'

    //DB, Hibernate, Micronaut Data
    annotationProcessor "io.micronaut.data:micronaut-data-processor"
    implementation "io.micronaut.configuration:micronaut-jdbc-hikari:2.2.6"
    implementation "io.micronaut.data:micronaut-data-jdbc"
    implementation 'io.micronaut.configuration:micronaut-hibernate-jpa:2.2.6'
    implementation "io.micronaut.data:micronaut-data-hibernate-jpa"
    implementation "io.micronaut.data:micronaut-data-spring"
    implementation group: 'com.vladmihalcea', name: 'hibernate-types-52', version: '2.9.3'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.10'

    // Logging
    implementation 'co.elastic.logging:logback-ecs-encoder:0.1.3'
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"

    // Utils
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation "com.google.guava:guava:29.0-jre"
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-jaxb-annotations', version: '2.10.1'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.2'
    implementation "com.networknt:json-schema-validator:1.0.43"
    testImplementation "com.networknt:json-schema-validator:1.0.43"

    //Cache
    implementation("io.micronaut.cache:micronaut-cache-caffeine")

    //Jasper
    implementation("net.sf.jasperreports:jasperreports:6.16.0") {
        exclude module: 'itext'
    }

    // Metrics
    implementation "io.micronaut.micrometer:micronaut-micrometer-core"
    implementation "io.micronaut.micrometer:micronaut-micrometer-registry-statsd"
    implementation "io.micronaut:micronaut-management"
    implementation "io.micronaut.micrometer:micronaut-micrometer-registry-prometheus"
}

/*tasks.withType(JavaCompile) {
    options.fork = true
}*/

test.classpath += configurations.developmentOnly

mainClassName = "gcg.dent.Application"

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}


run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote', '-Dhibernate.types.print.banner=false')
